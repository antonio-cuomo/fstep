syntax = "proto3";

package com.cgi.eoss.fstep;

import "common_messages.proto";
import "google/protobuf/timestamp.proto";
option java_multiple_files = true;
option java_package = "com.cgi.eoss.fstep.rpc.worker";

service FstepWorker {
    rpc PrepareEnvironment (JobInputs) returns (JobEnvironment);
    rpc PrepareInputs (JobInputs) returns (JobEnvironment);
    rpc PrepareDockerImage (DockerImageConfig) returns (PrepareDockerImageResponse);
    rpc LaunchContainer (JobDockerConfig) returns (LaunchContainerResponse);
    rpc ExecuteServiceCmd (ServiceCmd) returns (ServiceCmdResponse);
    rpc GetPortBindings (Job) returns (PortBindings);
    rpc StopContainer (Job) returns (StopContainerResponse);
    rpc WaitForContainerExit (ExitParams) returns (ContainerExitCode);
    rpc WaitForContainerExitWithTimeout (ExitWithTimeoutParams) returns (ContainerExitCode);
    rpc ListOutputFiles (ListOutputFilesParam) returns (OutputFileList);
    rpc GetOutputFile (GetOutputFileParam) returns (stream FileStream);
    rpc CleanUp (Job) returns (CleanUpResponse);
    rpc CreateUserPersistentFolder(PersistentFolderParams) returns (PersistentFolderCreationResponse);
    rpc GetUserPersistentFolderUsage(PersistentFolderUsageParams) returns (PersistentFolderUsageResponse);
    rpc SetUserPersistentFolderQuota(PersistentFolderParams) returns (PersistentFolderSetQuotaResponse);
    rpc DeleteUserPersistentFolder(PersistentFolderDeleteParams) returns (PersistentFolderDeletionResponse);
    
}

message JobSpec {
	Service service = 1;
	Job job = 2;
	repeated JobParam inputs = 3;
	int32 timeoutValue = 4;
	repeated string exposedPorts = 5;
	repeated string userBinds = 6;
	ResourceRequest resourceRequest = 7;
	map<string, string> environmentVariables = 8;
	repeated string persistentFolders = 9;
	
}

message ResourceRequest{
	int32 storage = 1;
}

message JobInputs {
    Job job = 1;
    repeated JobParam inputs = 2;
    repeated string persistentFolders = 3;
}

message JobEvent{
	JobEventType jobEventType = 1;
	 google.protobuf.Timestamp timestamp = 3;
}
enum JobEventType{
	DATA_FETCHING_STARTED = 0;
	DATA_FETCHING_COMPLETED = 1;
	PROCESSING_STARTED = 2;
	HEARTBEAT = 3;
}

message JobError{
	string errorDescription = 1;
}

message ContainerExit {
    int32 exitCode = 1;
    string outputRootPath = 2;
    google.protobuf.Timestamp timestamp = 3;
    
}

enum DirectoryPermissions{
	RO = 0;
	RW = 1;
}

message Directory {
	string path = 1;
	DirectoryPermissions permissions = 2;
}
message JobEnvironment {
    string workingDir = 1;
    string inputDir = 2;
    string outputDir = 3;
    string persistentDir = 4;
    repeated Directory additionalDirs = 5;
}

message JobDockerConfig {
    Job job = 1;
    string serviceName = 2;
    string dockerImage = 3;
    repeated string binds = 4;
    repeated string ports = 5;
    map<string, string> environmentVariables = 6;
}


message DockerImageConfig {
    string serviceName = 1;
    string dockerImage = 2;
}

message LaunchContainerResponse {
}

message ServiceCmd {
    Job job = 1;
    string command = 2;
}

message ServiceCmdResponse {
}

message PortBindings {
    repeated PortBinding bindings = 1;
}

message PortBinding {
    string portDef = 1;
    Binding binding = 2;
}

message Binding {
    string ip = 1;
    int32 port = 2;
}

message StopContainerResponse {
}

message ExitParams {
    Job job = 1;
}

message ExitWithTimeoutParams {
    Job job = 1;
    int32 timeout = 2;
}

message ContainerExitCode {
    int32 exitCode = 1;
}

message ListOutputFilesParam {
    Job job = 1;
    string outputsRootPath = 2;
}

message OutputFileList {
    repeated OutputFileItem items = 1;
}

message OutputFileItem {
    string relativePath = 1;
}

message GetOutputFileParam {
    Job job = 1;
    string path = 2;
}

message PrepareDockerImageResponse {
}

message CleanUpResponse {
}
